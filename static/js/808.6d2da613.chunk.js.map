{"version":3,"file":"static/js/808.6d2da613.chunk.js","mappings":"4LAGA,MAAMA,EAAc,CAClBC,MAAO,CACL,SAAU,CAAEC,GAAI,SAAUC,QAAS,wBACnC,SAAU,CAAED,GAAI,SAAUC,QAAS,0BACnC,SAAU,CAAED,GAAI,SAAUC,QAAS,mBACnC,SAAU,CAAED,GAAI,SAAUC,QAAS,gBAErCC,QAAS,CACP,WAAY,CACVF,GAAI,WACJG,MAAO,QACPC,QAAS,CAAC,SAAU,SAAU,SAAU,YAG5CC,YAAa,CAAC,aA4FhB,EAzFoBC,KAClB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAASX,GAmCnC,OACEY,EAAAA,EAAAA,KAACC,EAAAA,GAAe,CAACC,UAlCAC,IACjB,MAAM,YAAEC,EAAW,OAAEC,EAAM,YAAEC,GAAgBH,EAE7C,IAAKC,EAAa,OAElB,GACEA,EAAYG,cAAgBF,EAAOE,aACnCH,EAAYI,QAAUH,EAAOG,MAE7B,OAGF,MAAMC,EAASZ,EAAML,QAAQa,EAAOE,aAC9BG,EAAaC,MAAMC,KAAKH,EAAOf,SACrCgB,EAAWG,OAAOR,EAAOG,MAAO,GAChCE,EAAWG,OAAOT,EAAYI,MAAO,EAAGF,GAExC,MAAMQ,EAAY,IACbL,EACHf,QAASgB,GAGLK,EAAW,IACZlB,EACHL,QAAS,IACJK,EAAML,QACT,CAACsB,EAAUxB,IAAKwB,IAIpBhB,EAASiB,EAAS,EAIoBC,SACnCnB,EAAMF,YAAYsB,KAAKC,IACtB,MAAMT,EAASZ,EAAML,QAAQ0B,GACvB7B,EAAQoB,EAAOf,QAAQuB,KAAKE,GAAWtB,EAAMR,MAAM8B,KAEzD,OACEC,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEhB,EAAAA,EAAAA,KAAA,MAAAgB,SAAKP,EAAOhB,SACZO,EAAAA,EAAAA,KAACqB,EAAAA,GAAS,CAACd,YAAaE,EAAOnB,GAAG0B,SAC9BM,IACAF,EAAAA,EAAAA,MAAA,UACME,EAASC,eACbC,IAAKF,EAASG,SACdC,MAAO,CACLC,WAAY,UACZC,QAAS,MACTC,MAAO,SACPb,SAAA,CAED3B,EAAM4B,KAAI,CAACa,EAAMtB,KAChBR,EAAAA,EAAAA,KAAC+B,EAAAA,GAAS,CAAezB,YAAawB,EAAKxC,GAAIkB,MAAOA,EAAMQ,SACxDM,IACAtB,EAAAA,EAAAA,KAAA,OACEwB,IAAKF,EAASG,YACVH,EAASU,kBACTV,EAASW,gBACbP,MAAO,CACLQ,WAAY,OACZN,QAAS,OACTO,OAAQ,YACRC,UAAW,OACXC,gBAAiB,OACjBC,MAAO,UACJhB,EAASU,eAAeN,OAC3BV,SAEDc,EAAKvC,WAhBIuC,EAAKxC,MAqBtBgC,EAASiB,mBAnCR9B,EAAOnB,GAuCX,KAGM,C","sources":["components/KanbanBoard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nconst initialData = {\r\n  tasks: {\r\n    'task-1': { id: 'task-1', content: 'Take out the garbage' },\r\n    'task-2': { id: 'task-2', content: 'Watch my favorite show' },\r\n    'task-3': { id: 'task-3', content: 'Charge my phone' },\r\n    'task-4': { id: 'task-4', content: 'Cook dinner' },\r\n  },\r\n  columns: {\r\n    'column-1': {\r\n      id: 'column-1',\r\n      title: 'To do',\r\n      taskIds: ['task-1', 'task-2', 'task-3', 'task-4'],\r\n    },\r\n  },\r\n  columnOrder: ['column-1'],\r\n};\r\n\r\nconst KanbanBoard = () => {\r\n  const [state, setState] = useState(initialData);\r\n\r\n  const onDragEnd = (result) => {\r\n    const { destination, source, draggableId } = result;\r\n\r\n    if (!destination) return;\r\n\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const column = state.columns[source.droppableId];\r\n    const newTaskIds = Array.from(column.taskIds);\r\n    newTaskIds.splice(source.index, 1);\r\n    newTaskIds.splice(destination.index, 0, draggableId);\r\n\r\n    const newColumn = {\r\n      ...column,\r\n      taskIds: newTaskIds,\r\n    };\r\n\r\n    const newState = {\r\n      ...state,\r\n      columns: {\r\n        ...state.columns,\r\n        [newColumn.id]: newColumn,\r\n      },\r\n    };\r\n\r\n    setState(newState);\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      {state.columnOrder.map((columnId) => {\r\n        const column = state.columns[columnId];\r\n        const tasks = column.taskIds.map((taskId) => state.tasks[taskId]);\r\n\r\n        return (\r\n          <div key={column.id}>\r\n            <h2>{column.title}</h2>\r\n            <Droppable droppableId={column.id}>\r\n              {(provided) => (\r\n                <div\r\n                  {...provided.droppableProps}\r\n                  ref={provided.innerRef}\r\n                  style={{\r\n                    background: '#f8f8f8',\r\n                    padding: '8px',\r\n                    width: '250px',\r\n                  }}\r\n                >\r\n                  {tasks.map((task, index) => (\r\n                    <Draggable key={task.id} draggableId={task.id} index={index}>\r\n                      {(provided) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={{\r\n                            userSelect: 'none',\r\n                            padding: '16px',\r\n                            margin: '0 0 8px 0',\r\n                            minHeight: '50px',\r\n                            backgroundColor: '#fff',\r\n                            color: '#333',\r\n                            ...provided.draggableProps.style,\r\n                          }}\r\n                        >\r\n                          {task.content}\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        );\r\n      })}\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default KanbanBoard;\r\n"],"names":["initialData","tasks","id","content","columns","title","taskIds","columnOrder","KanbanBoard","state","setState","useState","_jsx","DragDropContext","onDragEnd","result","destination","source","draggableId","droppableId","index","column","newTaskIds","Array","from","splice","newColumn","newState","children","map","columnId","taskId","_jsxs","Droppable","provided","droppableProps","ref","innerRef","style","background","padding","width","task","Draggable","draggableProps","dragHandleProps","userSelect","margin","minHeight","backgroundColor","color","placeholder"],"sourceRoot":""}